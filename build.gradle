plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id "de.undercouch.download" version "5.3.0"
}

repositories {
    mavenCentral() 
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10'
    testImplementation 'junit:junit:4.4'
}

javafx {
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

tasks.named('test') {
    useJUnit()
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

task ensureDirectory{
    ensureDirectory.ext.dpath = new File("$projectDir/src/main/download")
    if (!ensureDirectory.ext.dpath.exists()) {
        ensureDirectory.ext.dpath.mkdirs()
    }
}

task downloadZipFile(dependsOn: ensureDirectory, type: Download) {
    src 'https://datahub.io/core/covid-19/r/covid-19_zip.zip'
    dest new File(ensureDirectory.dpath, 'covid-19_zip.zip')
    onlyIfModified true
}

task UnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from zipTree(downloadZipFile.dest).matching { include '**/countries-aggregated_json.json' }.singleFile
    into sourceSets.main.resources.srcDirs.first()
    finalizedBy(processResources)
}

task buildCore(dependsOn: UnzipFile){
    doLast{
        sourceSets {
            main {
                java {
                    srcDirs = ["src/main/java"]
                    exclude '**/ui/*.java'
                }
            }
        }
    }
    finalizedBy(build)
}

task buildUi(dependsOn: UnzipFile){
    doLast{
        sourceSets {
            main {
                java {
                    srcDirs = ["src/main/java"]
                }
            }
        }
    }
    finalizedBy(build)
}

task runCore (dependsOn: buildCore){
    doLast{
        mainClassName = 'de.unitrier.st.core.Main'
    }
    finalizedBy(run)
}

task runUi (dependsOn: buildUi){
    doLast{
        mainClassName = 'de.unitrier.st.ui.Ui'
    }
    finalizedBy(run)
}